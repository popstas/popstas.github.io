<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Popstas</title>
    <link>http://blog.popstas.ru/post/</link>
    <description>Recent content in Posts on Popstas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-ru</language>
    <lastBuildDate>Thu, 01 Mar 2018 20:30:00 +0600</lastBuildDate>
    
	<atom:link href="http://blog.popstas.ru/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Интеграция Планфикса и Toggl для учета времени</title>
      <link>http://blog.popstas.ru/blog/2018/03/01/planfix-toggl-integration/</link>
      <pubDate>Thu, 01 Mar 2018 20:30:00 +0600</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2018/03/01/planfix-toggl-integration/</guid>
      <description>&lt;p&gt;Прошло ровно 2 года с тех пор, как я сделал прошлую интеграцию &lt;a href=&#34;http://blog.popstas.ru/blog/2016/03/02/git-gitlab-planfix-integration/&#34;&gt;Планфикса с Git&lt;/a&gt;, так получилось, что я опять в отпуске и опять готов поделиться новой интеграцией.&lt;/p&gt;

&lt;p&gt;Tl;dr: автоматическая отправка из Toggl в Планфикс через аналитики. Ссылки:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/viasite/planfix-toggl-server&#34; target=&#34;_blank&#34;&gt;Описание&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/viasite/planfix-toggl-server/releases&#34; target=&#34;_blank&#34;&gt;Ссылки на загрузки&lt;/a&gt; (проверялось только под Windows)&lt;/li&gt;
&lt;li&gt;Расширения для &lt;a href=&#34;https://chrome.google.com/webstore/detail/toggl-button-planfix-edit/hkhchfdjhfegkhkgjongbodaphidfmcl&#34; target=&#34;_blank&#34;&gt;Chrome&lt;/a&gt; и &lt;a href=&#34;https://addons.mozilla.org/ru/firefox/addon/toggl-button-planfix/&#34; target=&#34;_blank&#34;&gt;Firefox&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.popstas.ru/images/2018-03/planfix-toggl.png&#34; /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Итоги 2017 года</title>
      <link>http://blog.popstas.ru/blog/2017/12/31/new-year-2018/</link>
      <pubDate>Sun, 31 Dec 2017 01:30:00 +0600</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2017/12/31/new-year-2018/</guid>
      <description>&lt;p&gt;Решил зафиксировать уходящий год и вспомнить, что было. Давно хотелось иметь такую шпаргалку, чтобы вспоминать, в каком же году это было. К счастью, в этом году перед долгой новогодней ночью нам достались выходные, использую их для этой записи.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.popstas.ru/images/2017-12/new-year.jpg&#34; /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Ext4 vs XFS</title>
      <link>http://blog.popstas.ru/blog/2017/12/01/ext4-vs-xfs/</link>
      <pubDate>Fri, 01 Dec 2017 23:25:00 +0600</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2017/12/01/ext4-vs-xfs/</guid>
      <description>&lt;p&gt;Мне недавно подсказали посмотреть на файловую систему XFS. Я посмотрел, первые результаты понравились, буду переходить на разделах с кучей файлов.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.popstas.ru/images/2017-12/ext4-vs-xfs.jpg&#34; /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Интеграция NodeMCU и JetBrains IDE на примере IDEA или как я чуть не написал свою IDE</title>
      <link>http://blog.popstas.ru/blog/2017/05/23/nodemcu-integrate-jetbrains-ide/</link>
      <pubDate>Tue, 23 May 2017 21:20:00 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2017/05/23/nodemcu-integrate-jetbrains-ide/</guid>
      <description>&lt;p&gt;Я в последнее время делаю себе домашние девайсы на ESP-8266, использую прошивку nodemcu-firmware, а значит Lua.&lt;/p&gt;

&lt;p&gt;Самый простой способ писать код на Lua под ESP-8266 - ESPlorer. У меня есть ряд претензий к этому редактору:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;нет структуры проекта (можно только открывать вкладки по одной через File - Open)&lt;/li&gt;
&lt;li&gt;простой редактор без автодополнения, мультиредактирования и т.д.&lt;/li&gt;
&lt;li&gt;нельзя загружать файл по хоткею&lt;/li&gt;
&lt;li&gt;нет git&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;TL;DR: написал свой велосипед, работает, но не без проблем.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.popstas.ru/images/2017-05/nodemcu-idea.png&#34; /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Packer: создаем свои vagrant box и docker image из одного конфига</title>
      <link>http://blog.popstas.ru/blog/2017/03/26/packer-create-vagrant-box-from-ansible-playbook/</link>
      <pubDate>Sun, 26 Mar 2017 21:30:00 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2017/03/26/packer-create-vagrant-box-from-ansible-playbook/</guid>
      <description>&lt;p&gt;Проект &lt;a href=&#34;https://github.com/viasite-ansible/ansible-server&#34; target=&#34;_blank&#34;&gt;viasite-ansible/ansible-server&lt;/a&gt; подошел к моменту,
когда нужно протестировать роль, которая зависит сразу от нескольких ролей (роль установки сайта).&lt;/p&gt;

&lt;p&gt;Естественно, при тестировании этой роли я не хочу ждать по 10 минут каждый раз,
поэтому &lt;del&gt;я потратил день&lt;/del&gt; я вспомнил, что есть такой тул - &lt;a href=&#34;https://www.packer.io/&#34; target=&#34;_blank&#34;&gt;Packer&lt;/a&gt;
и решил, что пришло его время.&lt;/p&gt;

&lt;p&gt;Packer умеет брать чистую операционку, настраивать ее и упаковывать результат в образ системы для использования в других
программах или разворачивания на хостинге.&lt;/p&gt;

&lt;p&gt;Для чего это может пригодиться:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ускорение тестирования&lt;/li&gt;
&lt;li&gt;б&lt;strong&gt;о&lt;/strong&gt;льшая повторяемость, по сравнению с ansible&lt;/li&gt;
&lt;li&gt;образы для продакшена для быстрого развертывания новых серверов&lt;/li&gt;
&lt;li&gt;образы идентичные продакшену для локальной разработки&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tl;dr: я буду собирать образы для Docker и Vagrant из Ubuntu, на которую накатили ansible плейбук.
Gist с результатами &lt;a href=&#34;https://gist.github.com/popstas/9a42d198fe7c5bee317d0bc4e2e2af9f&#34; target=&#34;_blank&#34;&gt;здесь&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.popstas.ru/images/2017-03/ansible-packer-docker-vagrant.png&#34; /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Продублировать последний аргумент текущей команды в zsh, zle widget</title>
      <link>http://blog.popstas.ru/blog/2017/03/18/zsh-duplicate-last-argument-in-current-command/</link>
      <pubDate>Sat, 18 Mar 2017 22:20:28 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2017/03/18/zsh-duplicate-last-argument-in-current-command/</guid>
      <description>&lt;p&gt;В последнее время я упоролся по тюнингу своего zsh. Потратил на это кучу времени, но есть и плюсы:
поучаствовав в правке пары плагинов, я начал понимать, как работает вся эта магия, которой я давно пользуюсь.&lt;/p&gt;

&lt;p&gt;Так вот, у меня в терминале бывает частая задача: скопировать файл и положить рядом с немного другим именем.
Раньше я пользовался такой схемой:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ls filename.ext
cp &amp;lt;Alt+.&amp;gt; &amp;lt;Alt+.&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;То есть, я сначала вводил команду-пустышку, такую, чтобы в историю попала команда, где последним аргументом будет путь к файлу.
Потом через &lt;code&gt;Alt+.&lt;/code&gt; вставлял 2 раза последний аргумент предыдущей команды.&lt;/p&gt;

&lt;p&gt;Другие примеры использования:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mv path/file1 path/file2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cp config.example config&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mc /home/user /home/user&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Теперь я могу делать так:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cp filename.ext &amp;lt;Alt+,&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;В действии:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.popstas.ru/images/2017-03/zsh-duplicate-last-arg.gif&#34; /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Подсветка Python синтаксиса в PhpStorm</title>
      <link>http://blog.popstas.ru/blog/2017/03/13/python-highlight-syntax-in-phpstorm/</link>
      <pubDate>Mon, 13 Mar 2017 00:30:00 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2017/03/13/python-highlight-syntax-in-phpstorm/</guid>
      <description>&lt;p&gt;Я долго терпел, но сегодня решил выяснить: можно ли добавить поддержку Python в PhpStorm.&lt;/p&gt;

&lt;p&gt;Оказалось, что можно и делается хоть и не за минуту, а за 5-10 минут.&lt;/p&gt;

&lt;p&gt;Tl;dr: можно сделать только подсветку, Solarized Dark нельзя.
&lt;a href=&#34;https://confluence.jetbrains.com/display/PhpStorm/TextMate+Bundles+in+PhpStorm&#34; target=&#34;_blank&#34;&gt;Официальная документация&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.popstas.ru/images/2017-03/phpstorm-python.gif&#34; /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ansible-role-zsh: zsh терминал с autosuggestions, fzf и красивым удобным prompt</title>
      <link>http://blog.popstas.ru/blog/2017/03/09/ansible-role-zsh-powerlevel9k-fzf-syntax-autosuggestions/</link>
      <pubDate>Thu, 09 Mar 2017 08:00:00 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2017/03/09/ansible-role-zsh-powerlevel9k-fzf-syntax-autosuggestions/</guid>
      <description>&lt;p&gt;Репост &lt;a href=&#34;https://habrahabr.ru/post/323496/&#34; target=&#34;_blank&#34;&gt;моей статьи с хабра&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Я провожу в терминале много времени, поэтому хочется, чтобы все было красиво, быстро и удобно.
Из этого рождается постоянное желание его настраивать, пробовать разные плагины.
Шеллом я выбрал для себя zsh лет 5 назад, пару лет назад нашел oh-my-zsh для его удобной настройки.
Со временем к этому конфигу добавились некоторые сбоку торчащие части в виде powerline и percol.&lt;/p&gt;

&lt;p&gt;Недавно я решил пересобрать все так, чтобы избавиться от ненужных плагинов, добавить нужные, сделать легкую установку
и обновление. В итоге появилась роль &lt;a href=&#34;https://github.com/viasite-ansible/ansible-role-zsh&#34; target=&#34;_blank&#34;&gt;ansible-role-zsh&lt;/a&gt;,
которая полностью настраивает терминалы на локалке и на моих серверах.&lt;/p&gt;

&lt;h3 id=&#34;особенности&#34;&gt;Особенности:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;устанавливается одной командой (кроме шрифта и темы вашего терминального клиента)&lt;/li&gt;
&lt;li&gt;быстро загружается, быстро работает&lt;/li&gt;
&lt;li&gt;полностью настраивается через ansible, &lt;code&gt;~/.zshrc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;полностью локальная (в систему ничего не ставится, все хранится в &lt;code&gt;~/.oh-my-zsh&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;оставляет возможность юзеру вносить свои настройки через &lt;code&gt;~/.zshrc.local&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;одинаково&lt;/del&gt; работает на macOS, старом Debian, Ubuntu, CentOS&lt;/li&gt;
&lt;li&gt;нормально выглядит на разных цветовых схемах (но лучше всего на Solarized Dark)&lt;/li&gt;
&lt;li&gt;встроенная подсветка синтаксиса (помогает реже ошибаться и лучше читать длинные команды)&lt;/li&gt;
&lt;li&gt;автодополнение по истории команд (помогает реже нажимать &lt;code&gt;Ctrl+R&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;отображение времени для долго выполняемых команд (помогает реже использовать &lt;code&gt;time&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Демонстрация фич за 1 минуту:
&lt;img src=&#34;http://blog.popstas.ru/images/2017-03/ansible-role-zsh-demo.gif&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Мой процесс написания ansible роли с Molecule и Gitlab CI</title>
      <link>http://blog.popstas.ru/blog/2017/03/08/develop-ansible-roles-with-molecule-and-gitlab-ci/</link>
      <pubDate>Wed, 08 Mar 2017 01:00:00 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2017/03/08/develop-ansible-roles-with-molecule-and-gitlab-ci/</guid>
      <description>&lt;p&gt;Опишу процесс, к которому я пришел на данный момент.&lt;/p&gt;

&lt;p&gt;TODO: concurrent
TODO: несколько дистрибов&lt;/p&gt;

&lt;h4 id=&#34;особенности&#34;&gt;Особенности&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Стремление не писать роли&lt;/li&gt;
&lt;li&gt;Постепенное ужесточение требований при написании, от &amp;ldquo;Лишь бы прошло с 10 раза&amp;rdquo; к &amp;ldquo;Скорее всего Travis пройдет с первого раза&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Тестирование на разных машинах&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.popstas.ru/images/2017-03/iterations.png&#34; /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Перенос блога с Octopress на Hugo</title>
      <link>http://blog.popstas.ru/blog/2017/03/05/migrate-from-octopress-to-hugo/</link>
      <pubDate>Sun, 05 Mar 2017 20:45:00 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2017/03/05/migrate-from-octopress-to-hugo/</guid>
      <description>&lt;p&gt;Эта статья первая на новом движке.&lt;/p&gt;

&lt;h4 id=&#34;зачем&#34;&gt;Зачем:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Не зависеть от ruby&lt;/li&gt;
&lt;li&gt;быстрее&lt;/li&gt;
&lt;li&gt;просто интересно&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.popstas.ru/images/2017-03/octopress-to-hugo.png&#34; /&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Настройка кеширующего прокси apt-cacher-ng для ускорения тестирования ansible ролей с Molecule, Gitlab CI и Docker</title>
      <link>http://blog.popstas.ru/blog/2017/02/26/apt-cacher-ng-for-testing-ansible-roles-with-docker-and-gitlab-ci/</link>
      <pubDate>Sun, 26 Feb 2017 04:14:00 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2017/02/26/apt-cacher-ng-for-testing-ansible-roles-with-docker-and-gitlab-ci/</guid>
      <description>&lt;p&gt;В &lt;a href=&#34;http://blog.popstas.ru/blog/2017/02/24/why-you-should-not-use-apt-mirror-for-ansible-tests-in-docker/&#34;&gt;предыдущей статье&lt;/a&gt; я настраивал &lt;code&gt;apt-mirror&lt;/code&gt; для тех же целей. У того способа нашлось несколько недостатков.&lt;/p&gt;

&lt;p&gt;В статье ниже описано, как решить ту же проблему, используя &lt;code&gt;apt-cacher-ng&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Tl;dr: на этот раз все получилось, этот способ меня устроил.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.popstas.ru/images/2017-02/apt-cacher-ng.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Как я создал и отказался от локального репозитория apt-mirror для Ubuntu для ускорения тестирования ansible ролей</title>
      <link>http://blog.popstas.ru/blog/2017/02/24/why-you-should-not-use-apt-mirror-for-ansible-tests-in-docker/</link>
      <pubDate>Fri, 24 Feb 2017 17:39:00 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2017/02/24/why-you-should-not-use-apt-mirror-for-ansible-tests-in-docker/</guid>
      <description>&lt;p&gt;При тестировании плейбуков на чистой Ubuntu (а как же еще?) самые большие накладные расходы по времени (субъективно)
и уж точно самые большие по трафику уходят на установку пакетов из системного репозитория. Особенно это заметно, когда видишь, что один и тот же тест Travis CI прогоняет в 1.5 раза быстрее.&lt;/p&gt;

&lt;p&gt;Ниже описано, как создать зеркало из &lt;a href=&#34;http://mirror.yandex.ru/ubuntu&#34; target=&#34;_blank&#34;&gt;http://mirror.yandex.ru/ubuntu&lt;/a&gt; и подружить его с Gitlab CI и molecule.&lt;/p&gt;

&lt;p&gt;Tl;dr: не делайте локальный репозиторий через &lt;code&gt;apt-mirror&lt;/code&gt; для мелких задач, не стоит оно того. Вместо этого нужно поднять кеширующий сервер через &lt;a href=&#34;http://blog.popstas.ru/blog/2017/02/26/apt-cacher-ng-for-testing-ansible-roles-with-docker-and-gitlab-ci/&#34;&gt;apt-cacher-ng&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.popstas.ru/images/2017-02/apt-mirror.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Извлечение одной из папок в git репозитории в отдельный репозиторий с сохранением истории - git-extract-subproject</title>
      <link>http://blog.popstas.ru/blog/2017/02/22/2017/02/22/git-extract-subproject-preserving-history/</link>
      <pubDate>Wed, 22 Feb 2017 01:19:00 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2017/02/22/2017/02/22/git-extract-subproject-preserving-history/</guid>
      <description>&lt;p&gt;Занялся я тут распиливанием большого проекта (дерево ansible ролей) на отдельные репозитории.&lt;/p&gt;

&lt;h3 id=&#34;для-этого-надо&#34;&gt;Для этого надо:&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Извлечь директорию подпроекта в отдельный репозиторий&lt;/li&gt;
&lt;li&gt;Удалить из проекта папку подпроекта&lt;/li&gt;
&lt;li&gt;Добавить в большой проект зависимость от подпроекта&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Ниже написано, как сделать 1-й шаг одной командой через скрипт &lt;code&gt;git-extract-subproject&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.popstas.ru/images/2017-02/git-extract-subproject.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kapacitor: часть 1. Введение, сравнение с Monit, установка с Ansible и без, настройка</title>
      <link>http://blog.popstas.ru/blog/2016/05/19/kapacitor-ansible-install-monit-comparsion/</link>
      <pubDate>Thu, 19 May 2016 00:47:52 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2016/05/19/kapacitor-ansible-install-monit-comparsion/</guid>
      <description>&lt;p&gt;Несколько недель назад я начал разбираться с Kapacitor, попутно записывая свои действия. Конца разбирательствам было не видно, записей становилось все больше и накопилось на серию.&lt;/p&gt;

&lt;p&gt;Речь пойдет о Kapacitor, последнеем слое из стека &lt;a href=&#34;https://influxdata.com/get-started/what-is-the-tick-stack/&#34; target=&#34;_blank&#34;&gt;TICK&lt;/a&gt; от InfluxData, набора программ для сбора, отображения и обработке метрик.&lt;/p&gt;

&lt;p&gt;Tl;dr: думаю, что Kapacitor нужен только тем, кто уже использует InfluxDB для сбора метрик. С установкой могут быть проблемы, если руки кривые.&lt;/p&gt;

&lt;p&gt;А также небольшое замечание о том, &lt;a href=&#34;http://blog.popstas.ru/blog/2016/05/19/kapacitor-ansible-install-monit-comparsion/#github-pull-request&#34;&gt;как делать Pull request&amp;rsquo;ы из браузера за 2 минуты&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img style=&#34;background:#1F242D&#34; src=&#34;http://blog.popstas.ru/images/2016-05/kapacitor.svg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Bash on Ubuntu on Windows: первый блин</title>
      <link>http://blog.popstas.ru/blog/2016/04/11/bash-on-ubuntu-on-windows/</link>
      <pubDate>Mon, 11 Apr 2016 05:01:00 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2016/04/11/bash-on-ubuntu-on-windows/</guid>
      <description>Итак, дождался обновления Windows, поставил в нее Ubuntu по инструкции, вот что было дальше:
Tl;dr: оно очень сырое, не работает почти ничего.
Первым делом захотелось родной zsh, берем aptitude, ставим, Ubuntu же! Шелл открылся под root, так что sudo не нужен.
$ aptitude install zsh  Конечно, ничего не вышло :) Во-первых, aptitude не нашел файл /var/lock/aptitude, нет проблем, ставим через apt-get, но оказывается, что нет инета.
Про это есть issue#14 (а багов за 4 дня открыли 40+), оказалось, дело в DNS, лечится так:</description>
    </item>
    
    <item>
      <title>Windows 10 build 14316 со встроенной Ubuntu и bash через программу Microsoft Insider Preview доступна не всем</title>
      <link>http://blog.popstas.ru/blog/2016/04/07/windows-ubuntu-bash-insider-update-not-available/</link>
      <pubDate>Thu, 07 Apr 2016 00:26:00 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2016/04/07/windows-ubuntu-bash-insider-update-not-available/</guid>
      <description>&lt;p&gt;Все конечно слышали, что Microsoft и Canonical сговорились и встроили в винду линукс. Так вот, его пока еще нельзя потрогать.&lt;/p&gt;

&lt;p&gt;UPD 11.04.2016: сборка 14316 дошла до меня, смотрите инструкцию по настройке.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/CommandLine-Documentation/issues/5&#34; target=&#34;_blank&#34;&gt;issue про недоступность сборки 14316&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.zacorp.ru/main/kak-vklyuchit-podderzhku-ubuntu-v-windows-10/&#34; target=&#34;_blank&#34;&gt;Инструкция по обновлению на русском&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;http://az648995.vo.msecnd.net/win/2016/04/bash-1024x569.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CHANGELOG.md: ручное и автоматическое ведение истории изменений проекта в Git</title>
      <link>http://blog.popstas.ru/blog/2016/03/06/changelog-dot-md-generate-from-git-conventions/</link>
      <pubDate>Sun, 06 Mar 2016 10:09:13 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2016/03/06/changelog-dot-md-generate-from-git-conventions/</guid>
      <description>&lt;p&gt;С начала января я веду свой &lt;a href=&#34;http://blog.popstas.ru/blog/2016/01/17/torrent-transmission-client-for-weburg/&#34;&gt;проектик&lt;/a&gt;, на котором обкатываю новые для меня технологии:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Статический анализ кода, phpcs, phpmd, Scrutinizer&lt;/li&gt;
&lt;li&gt;Автоматическая сборка, Travis CI&lt;/li&gt;
&lt;li&gt;Unit тесты, PHPUnit&lt;/li&gt;
&lt;li&gt;Покрытие кода, Coveralls&lt;/li&gt;
&lt;li&gt;Работу через задачи для любых изменений, Github Issues, PhpStorm tasks&lt;/li&gt;
&lt;li&gt;Документирование всего: README, CHANGELOG, сайт проекта, &amp;ndash;help&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;В этом посте изложена история изменений моего мнения о разных генераторах историй изменения.&lt;/p&gt;

&lt;p&gt;Tl;dr: conventional-changelog, стандартизация коммитов.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.popstas.ru/images/2016-03/changelog.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Интеграция Git, Gitlab и Planfix почти как на Github</title>
      <link>http://blog.popstas.ru/blog/2016/03/02/git-gitlab-planfix-integration/</link>
      <pubDate>Wed, 02 Mar 2016 00:49:29 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2016/03/02/git-gitlab-planfix-integration/</guid>
      <description>&lt;p&gt;Распробовал тут на неделе интеграцию задач Github и самого Git issue tracker.&lt;/p&gt;

&lt;p&gt;Ниже будет написано, как настроить в &lt;a href=&#34;https://planfix.ru/&#34; target=&#34;_blank&#34;&gt;Планфиксе&lt;/a&gt; такое поведение:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;В коммите упоминаем задачу, например, &lt;code&gt;Правки футера шаблона, https://test.planfix.ru/task/123456&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;После push в удаленный репозиторий в упомянутой задаче появляется комментарий с текстом коммита и ссылкой на страницу коммита
на Gitlab, если проект подключен к репозиторию.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tl;dr: настраивается post-receive hook в Git на удаленном сервере,
после каждого пуша анализируются сообщения пришедших коммитов, коммиты, содержащие ссылки на задачи отправляются в задачи по email.&lt;/p&gt;

&lt;p&gt;Вся интеграция делается в одном файле, код хука лежит здесь -
&lt;a href=&#34;https://github.com/popstas/server-scripts/blob/master/bin/git-hook-post-receive&#34; target=&#34;_blank&#34;&gt;git-hook-post-receive&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.popstas.ru/images/2016-03/planfix_logo.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>average: измерение среднего времени выполнения команды в bash</title>
      <link>http://blog.popstas.ru/blog/2016/02/29/average-time-of-script-execution-in-bash/</link>
      <pubDate>Mon, 29 Feb 2016 03:46:56 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2016/02/29/average-time-of-script-execution-in-bash/</guid>
      <description>&lt;p&gt;Периодически хочется посчитать среднее время, у меня были такие сценарии:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;простая проверка скорости загрузки страницы&lt;/li&gt;
&lt;li&gt;подбор оптимальных параметров к команде&lt;/li&gt;
&lt;li&gt;сравнение разных команд&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Раньше я просто запускал несколько раз с &lt;code&gt;time&lt;/code&gt;, смотрел результат, у уме делил.
Но мне это надоело, поэтому написал скрипт &lt;code&gt;average&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Как я обрабатываю входящие потоки контента через RSS и Pocket или моя воронка статей</title>
      <link>http://blog.popstas.ru/blog/2016/02/27/content-consumption-pyramid-rss/</link>
      <pubDate>Sat, 27 Feb 2016 14:48:03 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2016/02/27/content-consumption-pyramid-rss/</guid>
      <description>&lt;p&gt;Хочу поделиться своим способом быть в курсе всего интересного в мире IT, читать много статей и знать, где быстро найти нужную статью.&lt;/p&gt;

&lt;p&gt;Tl;dr: RSS + Twitter + Email &amp;rarr; Pocket &amp;rarr; Firefox &amp;rarr; Twitter + закладки.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.popstas.ru/images/2016-02/content_pyramid.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Docker в картинках</title>
      <link>http://blog.popstas.ru/blog/2016/02/26/docker-in-images/</link>
      <pubDate>Fri, 26 Feb 2016 21:29:45 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2016/02/26/docker-in-images/</guid>
      <description>&lt;p&gt;Оставлю здесь &lt;a href=&#34;http://habrahabr.ru/post/272145/&#34; target=&#34;_blank&#34;&gt;свой пост&lt;/a&gt; с хабра.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Перевод поста &lt;a href=&#34;http://merrigrove.blogspot.co.uk/2015/10/visualizing-docker-containers-and-images.html&#34; target=&#34;_blank&#34;&gt;Visualizing Docker Containers and Images&lt;/a&gt;, от новичка к новичкам, автор на простых примерах объясняет базовые сущности и процессы в использовании docker.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Если вы не знаете, что такое Docker или не понимаете, как он соотносится с виртуальными машинами или с инструментами configuration management, то этот пост может показаться немного сложным.&lt;/p&gt;

&lt;p&gt;Пост предназначен для тех, кто пытается освоить docker cli, понять, чем отличается контейнер и образ. В частности, будет объяснена разница между просто контейнером и запущенным контейнером.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://habrastorage.org/files/8ff/349/fb2/8ff349fb23f840589c479d029964b8dc.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Большой тачпад как замена мышки</title>
      <link>http://blog.popstas.ru/blog/2016/02/25/big-touchpad-as-mouse-replacement/</link>
      <pubDate>Thu, 25 Feb 2016 23:31:57 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2016/02/25/big-touchpad-as-mouse-replacement/</guid>
      <description>&lt;p&gt;Наслушавшись рассказов про то, какой на макбуке офигенный большой тачпад и как он легко заменяет мышку,
нашел способ испытать это на себе бесплатно. Описываю свои впечатления как обычно: плюсы, минусы, грабли, способы обхода.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.popstas.ru/images/2016-02/touchpad_wacom.jpg&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Проверяем изменения на странице через cron</title>
      <link>http://blog.popstas.ru/blog/2016/01/31/check-webpage-changes-with-cron/</link>
      <pubDate>Sun, 31 Jan 2016 02:00:13 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2016/01/31/check-webpage-changes-with-cron/</guid>
      <description>&lt;p&gt;Сегодня хотел заказать ароматизаторов на &lt;a href=&#34;http://baker-flavors.blogspot.ru/&#34; target=&#34;_blank&#34;&gt;Baker Flavours&lt;/a&gt;, дошел до страницы заказа,
и увидел &amp;ldquo;Уважаемые заказчики! В связи с чрезвычайно большим количеством заказов, прием заказов временно прекращен.&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Ок, будем ждать, пока эта надпись не пропадет, а чтобы не проверять руками, будем делать это на автомате и ждать уведомления.&lt;/p&gt;

&lt;p&gt;Строчка для crontab:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;0 20 * * * curl -s http://bakerflavors.ru/formbf.htm | iconv -f windows-1251 -t utf-8 | grep &amp;quot;временно прекращен&amp;quot; &amp;gt; /dev/null || { echo &amp;quot;BF order started&amp;quot; | terminal-notifier &amp;amp;&amp;amp; open http://bakerflavors.ru/formbf.htm }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Подробности под катом.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>E.ggtimer: таймер в пару кликов в любом браузере</title>
      <link>http://blog.popstas.ru/blog/2016/01/31/timer-in-browser-with-1-second-time-to-start/</link>
      <pubDate>Sun, 31 Jan 2016 01:43:24 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2016/01/31/timer-in-browser-with-1-second-time-to-start/</guid>
      <description>&lt;p&gt;Бывает, что надо вспомнить о чем-то в ближайшее время: выключить чайник, выйти к подъезду через 10 минут,
бросить заниматься фигней через полчаса - для таких вещей идеально подходит таймер. От таймера требуется только одно:
возможность установить его в течение 5 секунд. Недавно я нашел такой с такими плюсами:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Настроить нужно один раз, после этого будет работать на всех системах, если включена синхронизация настроек браузера&lt;/li&gt;
&lt;li&gt;Пользоваться легко&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;UPD 05.03.2017: до сих пор пользуюсь через раз, либо этим способом, либо: &amp;ldquo;Окей, гугл, таймер на пять минут&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.popstas.ru/images/2016-01/eggtimer.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Автоматическое скачивание торрентов с Weburg в Transmission и статистика на InfluxDB &amp; Grafana</title>
      <link>http://blog.popstas.ru/blog/2016/01/17/torrent-transmission-client-for-weburg/</link>
      <pubDate>Sun, 17 Jan 2016 08:22:25 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2016/01/17/torrent-transmission-client-for-weburg/</guid>
      <description>&lt;p&gt;У моего интернет-провайдера Планета есть бонусная программа поощрения раздачи торрентов с &lt;a href=&#34;http://weburg.net&#34; target=&#34;_blank&#34;&gt;weburg.net&lt;/a&gt;, дающая бонусы,
их можно тратить на абонентскую плату. У меня комп постоянно включен, я сразу стал участвовать.&lt;/p&gt;

&lt;p&gt;Поддержку раздач можно разбить на несколько задач:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;периодически скачивать новинки фильмов&lt;/li&gt;
&lt;li&gt;скачивать новые серии популярных сериалов&lt;/li&gt;
&lt;li&gt;удалять то, что плохо раздается&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Через пару месяцев мне это надоело, задумался об автоматизации этого процесса и вот в новогодние каникулы родился
&lt;a href=&#34;https://github.com/popstas/transmission-cli&#34; target=&#34;_blank&#34;&gt;transmission-cli&lt;/a&gt; - консольная утилита, решающая часть этих задач.&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&#34;https://ghbtns.com/github-btn.html?user=popstas&amp;repo=transmission-cli&amp;type=star&amp;count=true&amp;size=large&#34; frameborder=&#34;0&#34; scrolling=&#34;0&#34; width=&#34;160px&#34; height=&#34;30px&#34;&gt;&lt;/iframe&gt;
&lt;a href=&#34;https://travis-ci.org/popstas/transmission-cli&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://travis-ci.org/popstas/transmission-cli.svg?branch=master&#34; alt=&#34;Build Status&#34; /&gt;&lt;/a&gt;
&lt;a href=&#34;https://coveralls.io/github/popstas/transmission-cli?branch=master&#34; target=&#34;_blank&#34;&gt;&lt;img src=&#34;https://coveralls.io/repos/popstas/transmission-cli/badge.svg?branch=master&amp;amp;service=github&#34; alt=&#34;Coverage Status&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/popstas/transmission-cli/raw/master/docs/img/grafana.png?raw=true&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Быстрое обновление PhpStorm EAP на Mac OS через bash</title>
      <link>http://blog.popstas.ru/blog/2016/01/17/automacic-update-phpstorm-eap-on-mac-os/</link>
      <pubDate>Sun, 17 Jan 2016 07:50:17 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2016/01/17/automacic-update-phpstorm-eap-on-mac-os/</guid>
      <description>&lt;p&gt;Надоело постоянно обновлять PhpStorm руками. На Ubuntu последнее время делал это с помощью ansible,
под Mac этот плейбук не расчитан, к тому же версию ему надо было указвать вручную.
Поэтому написал скрипт, не совместимый с Ubuntu :)&lt;/p&gt;

&lt;p&gt;UPD: 06.06.2016
Сегодня вышла EAP 2016.1.1, так вот, теперь app ставится не в PhpStormEAP, как раньше, а с версией, поэтому мой скрипт перестал работать.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.jetbrains.com/phpstorm/files/2016/01/PhpStorm11EAP_splash_2@2x.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Разворачиваем Drupal 8 с помощью Otto</title>
      <link>http://blog.popstas.ru/blog/2015/12/14/drupal-8-with-otto/</link>
      <pubDate>Mon, 14 Dec 2015 08:16:00 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2015/12/14/drupal-8-with-otto/</guid>
      <description>&lt;p&gt;Репост &lt;a href=&#34;https://habrahabr.ru/post/273009/&#34; target=&#34;_blank&#34;&gt;моей статьи&lt;/a&gt; с хабра.&lt;/p&gt;

&lt;p&gt;Этот пост получился в результате моего ознакомления с Otto, одним из последних продуктов Hashicorp,
о котором уже была &lt;a href=&#34;http://habrahabr.ru/post/268497/&#34;&gt;обзорная статья&lt;/a&gt; на хабре.&lt;/p&gt;

&lt;p&gt;Мой пост носит более практический характер. Я решил поднять на otto стандартный проект,
чтобы сразу не наткнуться на тонкости настройки, а чтобы было интересно, выбрал Drupal 8, вышедший недавно.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://habrastorage.org/files/6d4/ec4/b47/6d4ec4b4786f47048d5fd55301234115.png&#34; alt=&#34;image&#34;/&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Интерактивная Zsh history с поиском и скроллом, percol</title>
      <link>http://blog.popstas.ru/blog/2015/12/10/interactive-bash-history-with-search/</link>
      <pubDate>Thu, 10 Dec 2015 19:55:20 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2015/12/10/interactive-bash-history-with-search/</guid>
      <description>&lt;p&gt;Если кто не знает, в bash/zsh есть поиск по истории комманд, если нажать &lt;code&gt;Ctrl+R&lt;/code&gt; и начать набирать
команду, отобразится последняя команда из истории, для навигации можно использовать
&lt;code&gt;Ctrl+R&lt;/code&gt;, &lt;code&gt;Ctrl+Shift+R&lt;/code&gt;. При этом видно одновременно видно только одну команду из истории.&lt;/p&gt;

&lt;p&gt;Утилита &lt;a href=&#34;https://github.com/mooz/percol#zsh-history-search&#34; target=&#34;_blank&#34;&gt;percol&lt;/a&gt; решает эту проблему.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.popstas.ru/images/2015-12/percol.gif&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Простой тайм-трекер для отслеживания потраченного времени</title>
      <link>http://blog.popstas.ru/blog/2015/11/22/simple-time-tracker/</link>
      <pubDate>Sun, 22 Nov 2015 09:40:45 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2015/11/22/simple-time-tracker/</guid>
      <description>&lt;p&gt;На работе у меня часто бывает такое, что не понятно, куда ушло время.
Поэтому написал для себя небольшое приложение, тайм-трекер - &lt;a href=&#34;http://time.popstas.ru/&#34; target=&#34;_blank&#34;&gt;http://time.popstas.ru/&lt;/a&gt;
Пользуюсь им уже 2 года, сегодня решил выложить на гитхаб и заодно исправил
глюки, которые раздражали последние годы :)&lt;/p&gt;

&lt;p&gt;Tl; dr: выбросил свою поделку, теперь пользуюсь &lt;a href=&#34;https://www.toggl.com/&#34; target=&#34;_blank&#34;&gt;https://www.toggl.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://github.com/popstas/time-tracker/raw/master/img/screenshot.png?raw=true&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Показать все окна gnome terminal в Ubuntu</title>
      <link>http://blog.popstas.ru/blog/2015/11/16/show-all-terminal-windows-in-ubuntu/</link>
      <pubDate>Mon, 16 Nov 2015 23:55:17 +0000</pubDate>
      
      <guid>http://blog.popstas.ru/blog/2015/11/16/show-all-terminal-windows-in-ubuntu/</guid>
      <description>&lt;p&gt;При работе за компом имею привычку открывать много терминалов,
не группируя их по вкладкам, рабочим столам или менеджером терминалов типа tmux.
При этом терминалы расположены по всему рабочему экрану.&lt;/p&gt;

&lt;p&gt;Из-за этого была такая проблема: при переключении на браузер или редактор,
которые обычно занимают по полэкрана, все терминалы оказывались под большими окнами.&lt;/p&gt;

&lt;p&gt;Придумал решение: нужно, чтобы можно было выбрать один терминал (который обычно доступен по Alt-Tab),
нажать хоткей и достать все окна этой же программы наверх.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>